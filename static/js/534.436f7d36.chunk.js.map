{"version":3,"file":"static/js/534.436f7d36.chunk.js","mappings":"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","sources":["dice/GrimwildFooter.tsx","dice/HeaderFooter.tsx","dice/analysis/DiminishingPoolsAnalysis.tsx"],"sourcesContent":["import { Box, Container, Link, Typography } from \"@mui/material\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\n\nexport default function GrimwildFooter() {\n    return (\n        <>\n            <Box sx={{ minHeight: \"30px\" }}></Box>\n            <Box\n                component=\"footer\"\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    minHeight: \"100px\",\n                    backgroundColor: (theme) => theme.palette.grey[800],\n                }}\n            >\n                <Container maxWidth=\"md\">\n                    <Typography variant=\"body2\" align=\"center\">\n                        <br />\n                        This page contains content from <b>Grimwild</b> by J.D. Maxwell, licensed\n                        under{\" \"}\n                        <Link\n                            href=\"https://creativecommons.org/licenses/by/4.0/legalcode.en\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            CC-BY&nbsp;\n                            <OpenInNewIcon fontSize=\"inherit\" />\n                        </Link>\n                        .\n                        <br />\n                        Check out{\" \"}\n                        <Link\n                            href=\"https://www.backerkit.com/c/projects/OddityPress/grimwild\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Grimwild&nbsp;on&nbsp;BackerKit&nbsp;\n                            <OpenInNewIcon fontSize=\"inherit\" />\n                        </Link>{\" \"}\n                        for more information!\n                    </Typography>\n                </Container>\n            </Box>\n        </>\n    );\n}\n","import GrimwildFooter from \"./GrimwildFooter\";\nimport { Box, Dialog, DialogContent, Divider, IconButton, Toolbar, Tooltip } from \"@mui/material\";\nimport { PropsWithChildren, ReactElement, useState } from \"react\";\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { colors } from \"../theme\";\n\nexport default function HeaderFooter({\n    title,\n    children,\n    back,\n    info,\n    infoDialog,\n    grimwild = true,\n}: PropsWithChildren<{\n    title: string;\n    back?: string;\n    info?: string;\n    infoDialog?: ReactElement;\n    grimwild?: boolean;\n}>) {\n    document.title = title;\n    return (\n        <>\n            <Toolbar sx={{ backgroundColor: colors.gray }}>\n                {back ? (\n                    <IconButton size=\"large\" edge=\"start\" href={back}>\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                ) : null}\n                <h1 style={{ marginLeft: 20 }}>{title}</h1>\n                <Box flexGrow={1}></Box>\n                {info ? (\n                    <Tooltip enterDelay={100} title={info}>\n                        <IconButton size=\"large\" edge=\"end\">\n                            <InfoIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n                {infoDialog ? <InfoDialog>{infoDialog}</InfoDialog> : null}\n            </Toolbar>\n            <Divider sx={{ marginBottom: 8 }} />\n            {children}\n            {grimwild ? <GrimwildFooter /> : null}\n        </>\n    );\n}\n\nfunction InfoDialog({ children }: PropsWithChildren<{}>) {\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => setOpen((o) => !o);\n    return (\n        <>\n            <Dialog\n                open={open}\n                onClose={(e) => {\n                    toggleOpen();\n                }}\n            >\n                <DialogContent>{children}</DialogContent>\n            </Dialog>\n            <IconButton size=\"large\" edge=\"end\" onClick={toggleOpen}>\n                <InfoIcon />\n            </IconButton>\n        </>\n    );\n}\n","import { Grid, Table, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport { BarChart, XAxis, YAxis, Tooltip, Bar, Rectangle, ResponsiveContainer } from \"recharts\";\nimport data from \"../../static/stats/pool_length.json\";\nimport HeaderFooter from \"../HeaderFooter\";\nimport { useEffect, useState } from \"react\";\nimport { colors } from \"../../theme\";\n\nexport type BarDatum = { name: string; proportion: number };\n\nexport function proportionFormat(value: number) {\n    const proportion = value > 1e-3 ? value.toFixed(3) : value === 0 ? 0 : value.toExponential(3);\n    const percent = value * 100;\n    const percentDisplay = percent < 1 ? percent.toPrecision(2) : percent.toPrecision(3);\n    return `${proportion} (${percentDisplay}%)`;\n}\n\nconst info = (\n    <>\n        The data on this page was generated by simulating 10^8 trials of rolling a pool of dice\n        until it was depleted. Fun fact - the number of rolls until a diminishing pool of n dice is\n        depleted can be expressed as the maximum of n i.i.d. geometric random variables with p=0.5.\n        However, the expected value of that distribution is not straightforward to calculate at all\n        for n&gt;1.{\" \"}\n        <a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0167715207002040\">\n            Here's a paper about it!\n        </a>\n    </>\n);\nexport default function DiminishingPoolAnalysis() {\n    const [selectedNumDice, setSelectedNumDice] = useState(6);\n    const [selectedResults, setSelectedResults] = useState<BarDatum[]>([]);\n    useEffect(() => {\n        const row = data.find((row) => row.size === selectedNumDice);\n        console.debug(\"row\", row, selectedNumDice);\n        if (row != undefined) {\n            setSelectedResults(\n                Object.entries(row.rolls).map(([timesRolled, proportion]) => ({\n                    name: timesRolled,\n                    proportion,\n                }))\n            );\n        }\n    }, [selectedNumDice]);\n\n    return (\n        <HeaderFooter title=\"Diminishing Pools\" back=\"/dice\" infoDialog={info}>\n            <Grid container>\n                <Grid item xs={12} sm={2}>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Dice</TableCell>\n                                <TableCell align=\"right\">Average rolls until depleted</TableCell>\n                            </TableRow>\n                            {data.map((row, i) => (\n                                <TableRow\n                                    key={i}\n                                    hover={true}\n                                    selected={row.size === selectedNumDice}\n                                    onClick={() => {\n                                        setSelectedNumDice(row.size);\n                                    }}\n                                >\n                                    <TableCell>{row.size}</TableCell>\n                                    <TableCell align=\"right\">{row.mean.toFixed(3)}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Grid>\n                <Grid item xs={12} sm={10} sx={{ minHeight: { xs: \"90vh\", sm: 100 } }}>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <BarChart\n                            width={4}\n                            height={4}\n                            data={selectedResults}\n                            margin={{\n                                top: 5,\n                                right: 30,\n                                left: 20,\n                                bottom: 5,\n                            }}\n                        >\n                            <XAxis dataKey=\"name\" dy={0}>\n                                {/* <Label >Number of rolls until pool is depleted</Label> */}\n                            </XAxis>\n                            <YAxis />\n                            <Tooltip\n                                cursor={{ fill: colors.gray }}\n                                contentStyle={{ backgroundColor: colors.darkGray }}\n                                labelFormatter={(value) => {\n                                    return `${value} roll${value == 1 ? \"\" : \"s\"} until depletion`;\n                                }}\n                                formatter={proportionFormat}\n                            />\n                            {/* <Legend /> */}\n\n                            <Bar\n                                dataKey=\"proportion\"\n                                fill={colors.blue}\n                                activeBar={<Rectangle fill={colors.green} stroke={colors.black} />}\n                            />\n                            {/* <ReferenceLine x={3.2} strokeWidth={3} stroke=\"red\" /> */}\n                        </BarChart>\n                    </ResponsiveContainer>\n                </Grid>\n            </Grid>\n        </HeaderFooter>\n    );\n}\n"],"names":["GrimwildFooter","_jsxs","_Fragment","children","_jsx","Box","sx","minHeight","component","display","flexDirection","backgroundColor","theme","palette","grey","Container","maxWidth","Typography","variant","align","Link","href","target","rel","OpenInNewIcon","fontSize","HeaderFooter","_ref","title","back","info","infoDialog","grimwild","document","Toolbar","colors","gray","IconButton","size","edge","ArrowBackIosIcon","style","marginLeft","flexGrow","Tooltip","enterDelay","InfoIcon","InfoDialog","Divider","marginBottom","_ref2","open","setOpen","useState","toggleOpen","o","Dialog","onClose","e","DialogContent","onClick","proportionFormat","value","proportion","toFixed","toExponential","percent","percentDisplay","toPrecision","concat","DiminishingPoolAnalysis","selectedNumDice","setSelectedNumDice","selectedResults","setSelectedResults","useEffect","row","data","find","console","debug","undefined","Object","entries","rolls","map","timesRolled","name","Grid","container","item","xs","sm","Table","TableBody","TableRow","TableCell","i","hover","selected","mean","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","XAxis","dataKey","dy","YAxis","cursor","fill","contentStyle","darkGray","labelFormatter","formatter","Bar","blue","activeBar","Rectangle","green","stroke","black"],"sourceRoot":""}