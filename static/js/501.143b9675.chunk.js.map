{"version":3,"file":"static/js/501.143b9675.chunk.js","mappings":"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","sources":["dice/GrimwildFooter.tsx","dice/HeaderFooter.tsx","dice/analysis/DiminishingPoolsAnalysis.tsx","../node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js","dice/analysis/RollsWithThornsAnalysis.tsx"],"sourcesContent":["import { Box, Container, Link, Typography } from \"@mui/material\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\n\nexport default function GrimwildFooter() {\n    return (\n        <>\n            <Box sx={{ minHeight: \"30px\" }}></Box>\n            <Box\n                component=\"footer\"\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    minHeight: \"100px\",\n                    backgroundColor: (theme) => theme.palette.grey[800],\n                }}\n            >\n                <Container maxWidth=\"md\">\n                    <Typography variant=\"body2\" align=\"center\">\n                        <br />\n                        This page contains content from <b>Grimwild</b> by J.D. Maxwell, licensed\n                        under{\" \"}\n                        <Link\n                            href=\"https://creativecommons.org/licenses/by/4.0/legalcode.en\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            CC-BY&nbsp;\n                            <OpenInNewIcon fontSize=\"inherit\" />\n                        </Link>\n                        .\n                        <br />\n                        Check out{\" \"}\n                        <Link\n                            href=\"https://www.backerkit.com/c/projects/OddityPress/grimwild\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Grimwild&nbsp;on&nbsp;BackerKit&nbsp;\n                            <OpenInNewIcon fontSize=\"inherit\" />\n                        </Link>{\" \"}\n                        for more information!\n                    </Typography>\n                </Container>\n            </Box>\n        </>\n    );\n}\n","import GrimwildFooter from \"./GrimwildFooter\";\nimport { Box, Dialog, DialogContent, Divider, IconButton, Toolbar, Tooltip } from \"@mui/material\";\nimport { PropsWithChildren, ReactElement, useState } from \"react\";\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { colors } from \"../theme\";\n\nexport default function HeaderFooter({\n    title,\n    children,\n    back,\n    info,\n    infoDialog,\n    grimwild = true,\n}: PropsWithChildren<{\n    title: string;\n    back?: string;\n    info?: string;\n    infoDialog?: ReactElement;\n    grimwild?: boolean;\n}>) {\n    document.title = title;\n    return (\n        <>\n            <Toolbar sx={{ backgroundColor: colors.gray }}>\n                {back ? (\n                    <IconButton size=\"large\" edge=\"start\" href={back}>\n                        <ArrowBackIosIcon />\n                    </IconButton>\n                ) : null}\n                <h1 style={{ marginLeft: 20 }}>{title}</h1>\n                <Box flexGrow={1}></Box>\n                {info ? (\n                    <Tooltip enterDelay={100} title={info}>\n                        <IconButton size=\"large\" edge=\"end\">\n                            <InfoIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n                {infoDialog ? <InfoDialog>{infoDialog}</InfoDialog> : null}\n            </Toolbar>\n            <Divider sx={{ marginBottom: 8 }} />\n            {children}\n            {grimwild ? <GrimwildFooter /> : null}\n        </>\n    );\n}\n\nfunction InfoDialog({ children }: PropsWithChildren<{}>) {\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => setOpen((o) => !o);\n    return (\n        <>\n            <Dialog\n                open={open}\n                onClose={(e) => {\n                    toggleOpen();\n                }}\n            >\n                <DialogContent>{children}</DialogContent>\n            </Dialog>\n            <IconButton size=\"large\" edge=\"end\" onClick={toggleOpen}>\n                <InfoIcon />\n            </IconButton>\n        </>\n    );\n}\n","import { Grid, Table, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport { BarChart, XAxis, YAxis, Tooltip, Bar, Rectangle, ResponsiveContainer } from \"recharts\";\nimport data from \"../../static/stats/pool_length.json\";\nimport HeaderFooter from \"../HeaderFooter\";\nimport { useEffect, useState } from \"react\";\nimport { colors } from \"../../theme\";\n\nexport type BarDatum = { name: string; proportion: number };\n\nexport function proportionFormat(value: number) {\n    const proportion = value > 1e-3 ? value.toFixed(3) : value === 0 ? 0 : value.toExponential(3);\n    const percent = value * 100;\n    const percentDisplay = percent < 1 ? percent.toPrecision(2) : percent.toPrecision(3);\n    return `${proportion} (${percentDisplay}%)`;\n}\n\nconst info = (\n    <>\n        The data on this page was generated by simulating 10^8 trials of rolling a pool of dice\n        until it was depleted. Fun fact - the number of rolls until a diminishing pool of n dice is\n        depleted can be expressed as the maximum of n i.i.d. geometric random variables with p=0.5.\n        However, the expected value of that distribution is not straightforward to calculate at all\n        for n&gt;1.{\" \"}\n        <a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0167715207002040\">\n            Here's a paper about it!\n        </a>\n    </>\n);\nexport default function DiminishingPoolAnalysis() {\n    const [selectedNumDice, setSelectedNumDice] = useState(6);\n    const [selectedResults, setSelectedResults] = useState<BarDatum[]>([]);\n    useEffect(() => {\n        const row = data.find((row) => row.size === selectedNumDice);\n        console.debug(\"row\", row, selectedNumDice);\n        if (row != undefined) {\n            setSelectedResults(\n                Object.entries(row.rolls).map(([timesRolled, proportion]) => ({\n                    name: timesRolled,\n                    proportion,\n                }))\n            );\n        }\n    }, [selectedNumDice]);\n\n    return (\n        <HeaderFooter title=\"Diminishing Pools\" back=\"/dice\" infoDialog={info}>\n            <Grid container>\n                <Grid item xs={12} sm={2}>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Dice</TableCell>\n                                <TableCell align=\"right\">Average rolls until depleted</TableCell>\n                            </TableRow>\n                            {data.map((row, i) => (\n                                <TableRow\n                                    key={i}\n                                    hover={true}\n                                    selected={row.size === selectedNumDice}\n                                    onClick={() => {\n                                        setSelectedNumDice(row.size);\n                                    }}\n                                >\n                                    <TableCell>{row.size}</TableCell>\n                                    <TableCell align=\"right\">{row.mean.toFixed(3)}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Grid>\n                <Grid item xs={12} sm={10} sx={{ minHeight: { xs: \"90vh\", sm: 100 } }}>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <BarChart\n                            width={4}\n                            height={4}\n                            data={selectedResults}\n                            margin={{\n                                top: 5,\n                                right: 30,\n                                left: 20,\n                                bottom: 5,\n                            }}\n                        >\n                            <XAxis dataKey=\"name\" dy={0}>\n                                {/* <Label >Number of rolls until pool is depleted</Label> */}\n                            </XAxis>\n                            <YAxis />\n                            <Tooltip\n                                cursor={{ fill: colors.gray }}\n                                contentStyle={{ backgroundColor: colors.darkGray }}\n                                labelFormatter={(value) => {\n                                    return `${value} roll${value == 1 ? \"\" : \"s\"} until depletion`;\n                                }}\n                                formatter={proportionFormat}\n                            />\n                            {/* <Legend /> */}\n\n                            <Bar\n                                dataKey=\"proportion\"\n                                fill={colors.blue}\n                                activeBar={<Rectangle fill={colors.green} stroke={colors.black} />}\n                            />\n                            {/* <ReferenceLine x={3.2} strokeWidth={3} stroke=\"red\" /> */}\n                        </BarChart>\n                    </ResponsiveContainer>\n                </Grid>\n            </Grid>\n        </HeaderFooter>\n    );\n}\n","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from '../useThemeProps';\nimport useTheme from '../useThemeWithoutDefault';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\n/**\n * @deprecated Not used internally. Use `MediaQueryList` from lib.dom.d.ts instead.\n */\n\n/**\n * @deprecated Not used internally. Use `(event: MediaQueryListEvent) => void` instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport rollsData from \"../../static/stats/rolls.json\";\nimport HeaderFooter from \"../HeaderFooter\";\nimport {\n    FormControl,\n    Grid,\n    InputLabel,\n    MenuItem,\n    OutlinedInput,\n    Select,\n    useMediaQuery,\n    useTheme,\n} from \"@mui/material\";\nimport { BarChart, Bar, Rectangle, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\nimport _ from \"lodash\";\nimport { colors } from \"../../theme\";\nimport { proportionFormat } from \"./DiminishingPoolsAnalysis\";\nconst data: Record<string, Record<string, (typeof rollsData)[\"1\"][\"0\"]>> = rollsData;\nconst barColors: Record<string, string> = {\n    disaster: colors.red,\n    grim: colors.lightGray,\n    messy: colors.yellow,\n    perfect: colors.green,\n    critical: colors.blue,\n};\n\nconst numDiceOptions = Object.keys(data).sort();\nconst numThornsOptions = Object.keys(data[\"1\"]).sort();\nconst info = (\n    <>\n        The data on this page was generated by simulating 10^8 rolls of a set of dice for each\n        combination of the size of the dice pool and the number of thorns.\n    </>\n);\n\nfunction NumDiceInput({\n    title,\n    options,\n    selected,\n    setSelected,\n    mobileScreen,\n}: {\n    title: string;\n    options: string[];\n    selected: string;\n    setSelected: Dispatch<SetStateAction<string>>;\n    mobileScreen: boolean;\n}) {\n    const min = options[0];\n    const max = options[options.length - 1];\n    return (\n        <FormControl>\n            <InputLabel id={title}>{title}</InputLabel>\n            {mobileScreen ? (\n                <Select\n                    value={selected}\n                    type=\"number\"\n                    label={title}\n                    id={title}\n                    labelId={title}\n                    onChange={(e) => {\n                        setSelected(e.target.value);\n                    }}\n                    sx={{ minWidth: { sm: \"250px\", xs: \"175px\" } }}\n                >\n                    {options.map((option) => (\n                        <MenuItem key={option} value={option}>\n                            {option}\n                        </MenuItem>\n                    ))}\n                </Select>\n            ) : (\n                <OutlinedInput\n                    inputProps={{ min, max }}\n                    value={selected}\n                    type=\"number\"\n                    label={title}\n                    id={title}\n                    onChange={(e) => {\n                        const newSelected = e.target.value;\n                        if (newSelected === \"\") {\n                            setSelected(e.target.value);\n                        } else if (Number(newSelected) < Number(min)) {\n                            setSelected(min);\n                        } else if (Number(newSelected) > Number(max)) {\n                            setSelected(max);\n                        } else {\n                            setSelected(e.target.value);\n                        }\n                    }}\n                    sx={{ minWidth: { sm: \"250px\", xs: \"175px\" } }}\n                />\n            )}\n        </FormControl>\n    );\n}\n\nexport default function RollsWithThornsAnalysis() {\n    const theme = useTheme();\n    const mobileScreen = useMediaQuery(theme.breakpoints.between(\"xs\", \"sm\"));\n    const [selectedNumDice, setSelectedNumDice] = useState(\"4\");\n    const [selectedNumThorns, setSelectedNumThorns] = useState(\"1\");\n    const selectedRow = (data[selectedNumDice] && data[selectedNumDice][selectedNumThorns]) || [];\n    const maxProportion = _.max(\n        Object.values(data)\n            .map((r) => Object.values(r))\n            .flat()\n            .flat()\n            .map((r) => r.proportion)\n    );\n    return (\n        <HeaderFooter title=\"Rolls with Thorns\" back=\"/dice\" infoDialog={info}>\n            <Grid container justifyContent={\"center\"}>\n                <Grid item>\n                    <Grid\n                        container\n                        spacing={2}\n                        // marginLeft={{ xs: 5, sm: 0 }}\n                    >\n                        <Grid item>\n                            <NumDiceInput\n                                title=\"Number of dice\"\n                                options={numDiceOptions}\n                                selected={selectedNumDice}\n                                setSelected={setSelectedNumDice}\n                                mobileScreen={mobileScreen}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <NumDiceInput\n                                title=\"Number of thorns\"\n                                options={numThornsOptions}\n                                selected={selectedNumThorns}\n                                setSelected={setSelectedNumThorns}\n                                mobileScreen={mobileScreen}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{ width: \"100vw\", height: \"60vh\" }}>\n                        <ResponsiveContainer>\n                            <BarChart\n                                width={8}\n                                height={4}\n                                data={selectedRow.map((r) => ({ ...r, fill: barColors[r.result] }))}\n                                margin={{\n                                    top: 30,\n                                    right: 30,\n                                    left: 5,\n                                    bottom: 30,\n                                }}\n                            >\n                                <XAxis\n                                    dataKey=\"result\"\n                                    angle={mobileScreen ? -45 : 0}\n                                    textAnchor={mobileScreen ? \"end\" : \"middle\"}\n                                />\n                                <YAxis\n                                    allowDataOverflow={true}\n                                    domain={[\n                                        0,\n                                        maxProportion\n                                            ? Number(maxProportion.toPrecision(2))\n                                            : \"auto\",\n                                    ]}\n                                />\n                                <Tooltip\n                                    cursor={{ fill: colors.gray }}\n                                    contentStyle={{ backgroundColor: colors.darkGray }}\n                                    formatter={proportionFormat}\n                                />\n                                <Bar\n                                    dataKey=\"proportion\"\n                                    fill={colors.white}\n                                    activeBar={<Rectangle stroke={colors.lightGray} />}\n                                />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                </Grid>\n            </Grid>\n        </HeaderFooter>\n    );\n}\n"],"names":["GrimwildFooter","_jsxs","_Fragment","children","_jsx","Box","sx","minHeight","component","display","flexDirection","backgroundColor","theme","palette","grey","Container","maxWidth","Typography","variant","align","Link","href","target","rel","OpenInNewIcon","fontSize","HeaderFooter","_ref","title","back","info","infoDialog","grimwild","document","Toolbar","colors","gray","IconButton","size","edge","ArrowBackIosIcon","style","marginLeft","flexGrow","Tooltip","enterDelay","InfoIcon","InfoDialog","Divider","marginBottom","_ref2","open","setOpen","useState","toggleOpen","o","Dialog","onClose","e","DialogContent","onClick","proportionFormat","value","proportion","toFixed","toExponential","percent","percentDisplay","toPrecision","concat","DiminishingPoolAnalysis","selectedNumDice","setSelectedNumDice","selectedResults","setSelectedResults","useEffect","row","data","find","console","debug","undefined","Object","entries","rolls","map","timesRolled","name","Grid","container","item","xs","sm","Table","TableBody","TableRow","TableCell","i","hover","selected","mean","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","XAxis","dataKey","dy","YAxis","cursor","fill","contentStyle","darkGray","labelFormatter","formatter","Bar","blue","activeBar","Rectangle","green","stroke","black","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","React","matches","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","getSnapshot","subscribe","mediaQueryList","notify","rollsData","barColors","disaster","red","grim","lightGray","messy","yellow","perfect","critical","numDiceOptions","keys","sort","numThornsOptions","NumDiceInput","options","setSelected","mobileScreen","min","max","length","FormControl","InputLabel","id","Select","type","label","labelId","onChange","minWidth","option","MenuItem","OutlinedInput","inputProps","newSelected","Number","RollsWithThornsAnalysis","queryInput","arguments","useTheme","supportMatchMedia","window","getThemeProps","props","replace","useMediaQuery","breakpoints","between","selectedNumThorns","setSelectedNumThorns","selectedRow","maxProportion","_","values","r","flat","justifyContent","spacing","result","angle","textAnchor","allowDataOverflow","domain","white"],"sourceRoot":""}